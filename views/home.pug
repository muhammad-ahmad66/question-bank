extends base 

mixin navItem(link, text, icon, active)
  li(class=`${active ? 'side-nav--active': ''}`)
    a(href=`${link}`, data-section=`${text.toLowerCase().replace(/\s+/g, '-')}`)
      //- svg
      //-   use(xlink:href=`img/icons.svg#icon-${icon}`)
      //- | #{text}
      i(class=`fa-solid fa-${icon}`)
      | &nbsp;   #{text}

block append head 
  link(rel="stylesheet" href="/css/home.css")

block content
  main.main
    .user-view
      nav.user-view__menu
        ul.side-nav
          +navItem('#', 'Profile Settings', 'gear', )
          +navItem('#', 'Courses', 'user-check', true)
          +navItem('#', 'Assessments', 'users-viewfinder')
          +navItem('#', 'Other Activities', 'list-check')
        - if(user.role === 'admin')
          .admin-nav
            h5.admin-nav__heading Admin
            ul.side-nav
              +navItem('#', 'Manage Users', 'users-cog')
              +navItem('#', 'Manage Courses', 'user-check')
              +navItem('#', 'Assign Question', 'search')
              +navItem('#', 'Other Settings', 'cog')

      .user-view__content
        #profile-settings.user-view__form-container
          h2.heading-secondary.ma-bt-md Your account settings
          form.form.form-user-data
            .form__group
              label.form__label(for='name') Name
              input#name.form__input(type='text', value=`${user.name}`, required name="name")
            .form__group.ma-bt-md
              label.form__label(for='email') Email address
              input#email.form__input(type='email', value=`${user.email}`, required name="email")
            .form__group.form__photo-upload
              img.form__user-photo(src=`/img/users/${user.photo}`, alt=`${user.name} Photo`)
              input.form__upload(type="file", accept="image/*", id="photo", name="photo")
              label(for="photo") Choose new photo
            .form__group.right
              button.btn.btn--small.btn--green Save settings
          .line &nbsp;
          h2.heading-secondary.ma-bt-md Password change
          form.form.form-user-password
            .form__group
              label.form__label(for='password-current') Current password
              input#password-current.form__input(type='password', placeholder='••••••••', required, minlength='8')
            .form__group
              label.form__label(for='password') New password
              input#password.form__input(type='password', placeholder='••••••••', required, minlength='8')
            .form__group.ma-bt-lg
              label.form__label(for='password-confirm') Confirm password
              input#password-confirm.form__input(type='password', placeholder='••••••••', required, minlength='8')
            .form__group.right
              button.btn.btn--small.btn--green.btn--save-password Save password

        #courses.user-view__form-container.active
          h2.heading-secondary.ma-bt-md Your Courses
          if user.associatedCourse.length <= 0
            p.no-data-msg No course are Assigned Yet!!

          else 
            .user-course-container
              table.course-table
                thead
                  tr
                    th #
                    th Course Name
                    th Course Code
                    th Credits
                    th Actions
                tbody
                  each course, index in user.associatedCourse
                    tr
                      td #{index + 1}
                      td= course.courseName
                      td= course.courseCode
                      td= course.credits
                      td
                        button.btn.btn-assign-course#btn-view-question(data-course-id=course._id) View Questions
                        //- button.btn.btn-delete Delete


        .reported-form-container#update-form-container
          form.reported-form.update-person-form(action="#", method="post")
            .reported-form__group
              label.reported-form__label(for="person-name") Full Name:
              input.reported-form__input(type="text", id="person-name", name="name", placeholder="Enter Person's name")
            .reported-form__group
              label.reported-form__label Gender:
              select.reported-form__input(id="person-gender", name="gender")
                option(value="male") Male
                option(value="female") Female
                option(value="non-binary") non-binary
            .reported-form__group
              label.reported-form__label(for="person-approxAge") Approximate Age:
              input.reported-form__input(type="number", id="person-approxAge", name="approxAge", placeholder="Enter approximate age")
            .reported-form__group
              label.reported-form__label(for="person-UniqueIdentifier") Unique Identifier:
              input.reported-form__input(type="text", id="person-UniqueIdentifier", name="UniqueIdentifier", placeholder="Enter any unique identifier")
            .reported-form__group.full-width
              label.reported-form__label(for="person-clothingDescription") Clothing Description:
              textarea.reported-form__input(type="text", id="person-clothingDescription", name="clothingDescription", placeholder="Enter him/her clothing description", rows='3')
            .reported-form__group
              label.reported-form__label(for="person-HairColor") Hair Color:
              input.reported-form__input(type="text", id="person-HairColor", name="HairColor", placeholder="Enter hair color")
            .reported-form__group
              //- img.form__user-photo(src=`img/users/default.jpg`, alt=` Photo`)
              //- input.form__upload(type="file", accept="image/*", id="photo", name="photo")
              //- label(for="photo") Choose a photo
            .reported-form__group
              label.reported-form__label Country:
              input.reported-form__input(type="text", id="person-country", name="country", placeholder="Enter a country name")
            .reported-form__group
              label.reported-form__label(for="person-city") City:
              input.reported-form__input(type="text", id="person-city", name="city", placeholder="Enter a city name")
            //- .reported-form__group
            //-   label.reported-form__label(for="lastSeenDate") Last Seen Date:
            //-   input.reported-form__input(type="date", id="lastSeenDate", name="lastSeenDate")
            .reported-form__group.full-width
              label.reported-form__label(for="person-additionalDetails") Additional Details:
              textarea.reported-form__input(id="person-additionalDetails", name="additionalDetails", placeholder="Enter any additional details. like physical, mental or medical conditions etc...", rows='6')
            .reported-form__group
              button.btn.btn--green(type="submit") Submit


        #assessments.user-view__form-container
          .assessments-form-container
            h2.assessments-heading Assessments

            .assessments-row
              .assessments-input-group
                label(for="courseId") Select Course:
                select#courseId(name="courseId" required)
                  option(value="" disabled selected) -- Select Course --
                  each course in courses
                    option(value=course._id) #{course.courseName}

              .assessments-input-group
                label(for="type") Assessment Type:
                select#type(name="type" required)
                  option(value="" disabled selected) -- Select Type --
                  option(value="quiz") Quiz
                  option(value="assignment") Assignment
                  option(value="mid-term") Mid-Term
                  option(value="final-term") Final-Term

              button.assessments-btn#makeAssessment(type="button") Make New Assessment

          #assessmentContainer
            table.assessments-table
              thead
                tr
                  th #
                  th Assessment Name
                  th Type
                  th Course Name
              tbody#assessmentBody
            p.no-assessments-message No assessments available for the selected course and type.


        #other-activities.user-view__form-container
          h2.heading-secondary.ma-bt-md Other Activities
          p This is the Filhal kly ni section. Content for Filhal kly ni goes here.

        // Admin sections
        //- ! For owner it's not working.
        if user.role === 'owner' || user.role === 'admin' || user.role === 'Owner' || user.role === 'OWNER'

          #manage-users.user-view__form-container
            h2.heading-secondary.ma-bt-md Manage Users
            p This is the Manage Users section. Here you can manage users.
            a.btn.btn--green.btn--small(href="/all-users") Get All Users


          #manage-courses.user-view__form-container
            h2.heading-secondary.ma-bt-md Manage Courses
            .btn-container  
              a(href="/create-course-form").btn-text Create course
              a(href="/all-courses").btn-text Get all course
              a(href="").btn-text Assign course to user
              a(href="").btn-text Manage course

          #assign-question.user-view__form-container
            .form-container
              h2.heading-secondary.ma-bt-md Add Question
              form(action="")#from-add-question
                .form-group
                  label(for="questionText") Question Text
                  //- input#questionText.form-input(type="text" name="questionText" required value='PF')
                  textarea#questionText.form-input(name="questionText" rows='5')

                // dropdown menu to show all the courses that are available in our application, loop
                .form-group
                  label(for="courseId") Courses
                  select#courseId.form-input
                    each course in courses
                      option(value=course._id)= course.courseName

                .form-group
                  label(for="clo") CLO
                  input#clo.form-input(type="text" name="clo" required )
                .form-group
                  label(for="plo") PLO
                  input#plo.form-input(type="text" name="plo" required )
                
                .form-group
                  label(for="marks") Marks
                  input#marks.form-input(type="number" name="marks" required)
                .form-group
                  label(for="difficulty") Difficulty
                  select#difficulty.form-input
                    option(value='easy') Easy
                    option(value='medium') Medium
                    option(value='hard') Hard


                .form-group
                  button#btn-create-question.btn(type="submit" data-created-by=`${user._id}`) Add Question

          #other-settings.user-view__form-container
            h2.heading-secondary.ma-bt-md Other Settings
            p This is the Manage Bookings section. Here you can manage bookings.
